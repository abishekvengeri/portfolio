Interactive Portfolio HTML Implementation
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Alex Johnson - Portfolio</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
  <style>
    .project-card {
      transition: all 0.3s ease;
    }
    .project-card:hover {
      transform: translateY(-4px);
    }
    .expanded {
      grid-column: 1 / -1;
    }
  </style>
</head>
<body class="min-h-screen bg-gray-50">
  <!-- Hero Section -->
  <div class="relative bg-blue-600 text-white">
    <div class="absolute inset-0 bg-black opacity-30"></div>
    <div class="container mx-auto px-6 py-20 relative z-10">
      <h1 class="text-4xl md:text-6xl font-bold mb-4">
        Creating Digital Experiences That Matter
      </h1>
      <p class="text-xl md:text-2xl mb-8 max-w-2xl">
        Full Stack Developer specializing in building exceptional digital experiences
      </p>
      <button
        onclick="setActiveSection('contact')"
        class="px-6 py-3 bg-white text-blue-600 font-medium rounded-md hover:bg-gray-100 transition-colors"
      >
        Get In Touch
      </button>
    </div>
  </div>
  
  <!-- Navigation -->
  <div class="sticky top-0 bg-white shadow-md z-20">
    <div class="container mx-auto px-6">
      <nav class="flex justify-between items-center py-4">
        <div class="text-xl font-bold text-blue-600">Alex Johnson</div>
        <div class="flex space-x-1 md:space-x-4">
          <button
            onclick="setActiveSection('projects')"
            id="nav-projects"
            class="px-3 py-2 rounded-md text-sm md:text-base capitalize bg-blue-500 text-white"
          >
            Projects
          </button>
          <button
            onclick="setActiveSection('skills')"
            id="nav-skills"
            class="px-3 py-2 rounded-md text-sm md:text-base capitalize text-gray-700 hover:bg-gray-100"
          >
            Skills
          </button>
          <button
            onclick="setActiveSection('about')"
            id="nav-about"
            class="px-3 py-2 rounded-md text-sm md:text-base capitalize text-gray-700 hover:bg-gray-100"
          >
            About
          </button>
          <button
            onclick="setActiveSection('contact')"
            id="nav-contact"
            class="px-3 py-2 rounded-md text-sm md:text-base capitalize text-gray-700 hover:bg-gray-100"
          >
            Contact
          </button>
        </div>
      </nav>
    </div>
  </div>
  
  <!-- Content Section -->
  <div class="container mx-auto px-6 py-12">
    <h2 id="section-title" class="text-3xl font-bold mb-8 text-center capitalize">Projects</h2>
    
    <!-- Projects Section -->
    <div id="projects-section" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <!-- Project cards will be generated by JavaScript -->
    </div>
    
    <!-- Skills Section -->
    <div id="skills-section" class="grid grid-cols-1 md:grid-cols-2 gap-6 hidden">
      <!-- Skill cards will be generated by JavaScript -->
    </div>
    
    <!-- About Section -->
    <div id="about-section" class="hidden">
      <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="md:flex">
          <div class="md:w-1/3">
            <img 
              src="/api/placeholder/400/500" 
              alt="Alex Johnson" 
              class="w-full h-64 md:h-full object-cover"
            />
          </div>
          <div class="p-8 md:w-2/3">
            <h2 class="text-3xl font-bold mb-1">Alex Johnson</h2>
            <h3 class="text-xl text-blue-500 mb-6">Full Stack Developer</h3>
            <p class="text-gray-600 mb-6 leading-relaxed">
              Passionate developer with 5+ years of experience creating modern, user-friendly applications. 
              Specializing in JavaScript frameworks and responsive design, I focus on building scalable solutions 
              that solve real-world problems.
            </p>
            
            <div class="flex flex-col space-y-2">
              <div class="flex items-center">
                <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                <span>San Francisco, CA</span>
              </div>
              <div class="flex items-center">
                <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
                <span>contact@example.com</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Contact Section -->
    <div id="contact-section" class="hidden">
      <div class="bg-white rounded-lg shadow-lg overflow-hidden p-8">
        <h2 class="text-2xl font-bold mb-6">Get In Touch</h2>
        <form class="space-y-6" onsubmit="event.preventDefault(); alert('Message sent!');">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="name" class="block mb-2 text-sm font-medium">Name</label>
              <input
                type="text"
                id="name"
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Your name"
                required
              />
            </div>
            <div>
              <label for="email" class="block mb-2 text-sm font-medium">Email</label>
              <input
                type="email"
                id="email"
                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Your email"
                required
              />
            </div>
          </div>
          <div>
            <label for="subject" class="block mb-2 text-sm font-medium">Subject</label>
            <input
              type="text"
              id="subject"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Subject"
              required
            />
          </div>
          <div>
            <label for="message" class="block mb-2 text-sm font-medium">Message</label>
            <textarea
              id="message"
              rows="5"
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Your message"
              required
            ></textarea>
          </div>
          <button
            type="submit"
            class="px-6 py-3 bg-blue-500 text-white font-medium rounded-md hover:bg-blue-600 transition-colors"
          >
            Send Message
          </button>
        </form>
      </div>
    </div>
  </div>
  
  <!-- Footer -->
  <footer class="bg-gray-800 text-white py-8">
    <div class="container mx-auto px-6">
      <div class="flex flex-col md:flex-row justify-between items-center">
        <div class="mb-6 md:mb-0">
          <p>Â© 2025 Alex Johnson. All rights reserved.</p>
        </div>
        <div class="flex space-x-4">
          <a href="#" class="hover:text-blue-400">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M20 3H4a1 1 0 00-1 1v16a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1zM8.5 17.5h-3v-9h3v9zM7 7C6.447 7 6 6.553 6 6s.447-1 1-1 1 .447 1 1-.447 1-1 1zm11 10.5h-3v-5.25c0-1.141-.839-2.25-1.891-2.25-.357 0-1.359.183-1.359 1.25v6.25h-3v-9h3v1.39c.747-.923 1.8-1.39 2.6-1.39 2.786 0 3.65 1.867 3.65 4.43v4.57z"></path>
            </svg>
          </a>
          <a href="#" class="hover:text-blue-400">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2C6.477 2 2 6.477 2 12c0 4.42 2.865 8.166 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.34-3.369-1.34-.454-1.156-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.699 1.028 1.592 1.028 2.683 0 3.841-2.337 4.687-4.565 4.935.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12c0-5.523-4.477-10-10-10z"></path>
            </svg>
          </a>
          <a href="#" class="hover:text-blue-400">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"></path>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </footer>

  <script>
    // Data
    const projects = [
      {
        id: 1,
        title: "Modern Web Application",
        category: "Web Development",
        image: "/api/placeholder/640/400",
        description: "A responsive web application built with React and Node.js. Features include user authentication, real-time updates, and a clean, intuitive interface.",
        tech: ["React", "Node.js", "MongoDB", "Express"]
      },
      {
        id: 2,
        title: "E-commerce Platform",
        category: "Full Stack",
        image: "/api/placeholder/640/400",
        description: "Complete e-commerce solution with product management, user accounts, shopping cart functionality, and secure payment processing.",
        tech: ["React", "Redux", "Firebase", "Stripe API"]
      },
      {
        id: 3,
        title: "Mobile Fitness App",
        category: "Mobile Development",
        image: "/api/placeholder/640/400",
        description: "Fitness tracking application that helps users monitor workouts, set goals, and track progress over time with visualization tools.",
        tech: ["React Native", "GraphQL", "AWS", "D3.js"]
      }
    ];
    
    const skills = [
      { name: "JavaScript", level: 90 },
      { name: "React", level: 85 },
      { name: "Node.js", level: 80 },
      { name: "HTML/CSS", level: 95 },
      { name: "UI/UX Design", level: 75 },
      { name: "Database Management", level: 70 }
    ];
    
    // State variables
    let activeSection = 'projects';
    let expandedProject = null;
    
    // Initialize the page
    document.addEventListener('DOMContentLoaded', function() {
      renderProjects();
      renderSkills();
    });
    
    // Set active section
    function setActiveSection(section) {
      // Update active section
      activeSection = section;
      
      // Update navigation buttons
      document.querySelectorAll('[id^="nav-"]').forEach(button => {
        if (button.id === `nav-${section}`) {
          button.classList.remove('text-gray-700', 'hover:bg-gray-100');
          button.classList.add('bg-blue-500', 'text-white');
        } else {
          button.classList.remove('bg-blue-500', 'text-white');
          button.classList.add('text-gray-700', 'hover:bg-gray-100');
        }
      });
      
      // Update section title
      document.getElementById('section-title').textContent = section;
      
      // Show active section, hide others
      document.querySelectorAll('[id$="-section"]').forEach(sectionElement => {
        if (sectionElement.id === `${section}-section`) {
          sectionElement.classList.remove('hidden');
        } else {
          sectionElement.classList.add('hidden');
        }
      });
    }
    
    // Toggle project expansion
    function toggleProject(id) {
      expandedProject = expandedProject === id ? null : id;
      renderProjects();
    }
    
    // Render projects
    function renderProjects() {
      const projectsContainer = document.getElementById('projects-section');
      projectsContainer.innerHTML = '';
      
      projects.forEach(project => {
        const isExpanded = expandedProject === project.id;
        const projectCard = document.createElement('div');
        
        projectCard.className = `project-card bg-white rounded-lg shadow-lg overflow-hidden transition-all duration-300 transform hover:shadow-xl ${isExpanded ? 'expanded' : ''}`;
        projectCard.onclick = () => toggleProject(project.id);
        
        projectCard.innerHTML = `
          <div class="relative">
            <img src="${project.image}" alt="${project.title}" class="w-full h-48 object-cover" />
            <div class="absolute top-2 right-2 bg-blue-500 text-white px-2 py-1 rounded text-xs">
              ${project.category}
            </div>
          </div>
          <div class="p-6">
            <h3 class="text-xl font-bold mb-2">${project.title}</h3>
            <p class="text-gray-600 mb-4">${project.description}</p>
            ${isExpanded ? `
              <div class="mt-4 pt-4 border-t border-gray-200">
                <h4 class="font-semibold mb-2">Technologies Used:</h4>
                <div class="flex flex-wrap gap-2">
                  ${project.tech.map(tech => `
                    <span class="bg-gray-100 px-3 py-1 rounded-full text-sm">${tech}</span>
                  `).join('')}
                </div>
              </div>
            ` : ''}
          </div>
        `;
        
        projectsContainer.appendChild(projectCard);
      });
    }
    
    // Render skills
    function renderSkills() {
      const skillsContainer = document.getElementById('skills-section');
      skillsContainer.innerHTML = '';
      
      skills.forEach(skill => {
        const skillCard = document.createElement('div');
        skillCard.className = 'bg-white p-4 rounded-lg shadow';
        
        skillCard.innerHTML = `
          <div class="flex justify-between mb-2">
            <span class="font-medium">${skill.name}</span>
            <span class="text-blue-500">${skill.level}%</span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2.5">
            <div 
              class="bg-blue-500 h-2.5 rounded-full" 
              style="width: ${skill.level}%"
            ></div>
          </div>
        `;
        
        skillsContainer.appendChild(skillCard);
      });
    }
  </script>
</body>
</html>
